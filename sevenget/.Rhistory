data1 <-  str_replace_all(data_date, "\\W", " ")
# 명사 추출
nouns <- extractNoun(data1)
# 추출한 명사 list를 문자열 벡터로 변환. 단어별 빈도표 생성.
wordcount <- table(unlist(nouns))
wordcount_top <-head(sort(wordcount, decreasing = T),100)
#View(wordcount)
wordcount <- as.data.frame(wordcount)
wordcount <- lapply(wordcount, function(wordcount) gsub("","",wordcount))
wordcount
class(wordcount)
wordcount <- as.data.frame(wordcount)
class(wordcount)
library(readxl)
getwd()
setwd("C:/Users/user/git/finpjt/sevenget")
data <- read_excel("survey_result.xlsx", col_names = T)
data <- data[,c(-1)]
colnames(data)=c("직장 경험 유무", "연애", "결혼", "육아 및 출산", "내집마련", "인간관계", "꿈", "희망" )
is.na.data.frame(data)
data$`직장 경험 유무` <- gsub("현재 직장에 다니고 있다. 혹은 직장에 다녀본 경험이 있다.", "1",data$`직장 경험 유무`)
data$`직장 경험 유무` <- gsub("직장에 다녀본 적이 없다.", "0",data$`직장 경험 유무`)
# 연애 부분 문자추출!!
data_date <- data$연애
data_date
library(rJava)
library(memoise)
library(KoNLP)
library(stringr)
library(dplyr)
useNIADic()
# 데이터 불러오기
data_date
# 특수 문자 제거
data1 <-  str_replace_all(data_date, "\\W", " ")
# 명사 추출
nouns <- extractNoun(data1)
# 추출한 명사 list를 문자열 벡터로 변환. 단어별 빈도표 생성.
wordcount <- table(unlist(nouns))
wordcount_top <-head(sort(wordcount, decreasing = T),100)
#View(wordcount)
library(readxl)
getwd()
setwd("C:/Users/user/git/finpjt/sevenget")
data <- read_excel("survey_result.xlsx", col_names = T)
data <- data[,c(-1)]
colnames(data)=c("직장 경험 유무", "연애", "결혼", "육아 및 출산", "내집마련", "인간관계", "꿈", "희망" )
is.na.data.frame(data)
data$`직장 경험 유무` <- gsub("현재 직장에 다니고 있다. 혹은 직장에 다녀본 경험이 있다.", "1",data$`직장 경험 유무`)
data$`직장 경험 유무` <- gsub("직장에 다녀본 적이 없다.", "0",data$`직장 경험 유무`)
# 연애 부분 문자추출!!
data_date <- data$연애
data_date
library(rJava)
library(memoise)
library(KoNLP)
library(stringr)
library(dplyr)
useNIADic()
# 데이터 불러오기
data_date
# 특수 문자 제거
data1 <-  str_replace_all(data_date, "\\W", " ")
# 명사 추출
nouns <- extractNoun(data1)
# 추출한 명사 list를 문자열 벡터로 변환. 단어별 빈도표 생성.
wordcount <- table(unlist(nouns))
wordcount_top <-head(sort(wordcount, decreasing = T),100)
#View(wordcount)
wordcount <- lapply(wordcount, function(wordcount) gsub("","",wordcount))
wordcount <- as.data.frame(wordcount)
class(wordcount)
top_100 <- wordcount %>%
arrange(desc(Freq))%>%
head(100)
top_100
wordcount
library(readxl)
getwd()
setwd("C:/Users/user/git/finpjt/sevenget")
data <- read_excel("survey_result.xlsx", col_names = T)
data <- data[,c(-1)]
colnames(data)=c("직장 경험 유무", "연애", "결혼", "육아 및 출산", "내집마련", "인간관계", "꿈", "희망" )
is.na.data.frame(data)
data$`직장 경험 유무` <- gsub("현재 직장에 다니고 있다. 혹은 직장에 다녀본 경험이 있다.", "1",data$`직장 경험 유무`)
data$`직장 경험 유무` <- gsub("직장에 다녀본 적이 없다.", "0",data$`직장 경험 유무`)
# 연애 부분 문자추출!!
data_date <- data$연애
data_date
library(rJava)
library(memoise)
library(KoNLP)
library(stringr)
library(dplyr)
useNIADic()
# 데이터 불러오기
data_date
# 특수 문자 제거
data1 <-  str_replace_all(data_date, "\\W", " ")
# 명사 추출
nouns <- extractNoun(data1)
# 추출한 명사 list를 문자열 벡터로 변환. 단어별 빈도표 생성.
wordcount <- table(unlist(nouns))
wordcount_top <-head(sort(wordcount, decreasing = T),100)
#View(wordcount)
wordcount <- sapply(wordcount, function(wordcount) gsub("","",wordcount))
wordcount <- as.data.frame(wordcount)
top_100 <- wordcount %>%
arrange(desc(Freq))%>%
head(100)
library(readxl)
getwd()
setwd("C:/Users/user/git/finpjt/sevenget")
data <- read_excel("survey_result.xlsx", col_names = T)
data <- data[,c(-1)]
colnames(data)=c("직장 경험 유무", "연애", "결혼", "육아 및 출산", "내집마련", "인간관계", "꿈", "희망" )
is.na.data.frame(data)
data$`직장 경험 유무` <- gsub("현재 직장에 다니고 있다. 혹은 직장에 다녀본 경험이 있다.", "1",data$`직장 경험 유무`)
data$`직장 경험 유무` <- gsub("직장에 다녀본 적이 없다.", "0",data$`직장 경험 유무`)
# 연애 부분 문자추출!!
data_date <- data$연애
data_date
library(rJava)
library(memoise)
library(KoNLP)
library(stringr)
library(dplyr)
useNIADic()
# 데이터 불러오기
data_date
# 특수 문자 제거
data1 <-  str_replace_all(data_date, "\\W", " ")
# 명사 추출
nouns <- extractNoun(data1)
# 추출한 명사 list를 문자열 벡터로 변환. 단어별 빈도표 생성.
wordcount <- table(unlist(nouns))
wordcount_top <-head(sort(wordcount, decreasing = T),100)
#View(wordcount)
wordcount <- as.data.frame(wordcount)
top_100 <- wordcount %>%
arrange(desc(Freq))%>%
head(100)
top_100
library(wordcloud)
pal <- brewer.pal(8, "Dark2") # Dark2 색상 목록에서 8개 색상 추출.
set.seed(1234)
wordcloud(words = top_100$Var1,
freq = top_100$Freq,
min.freq = 2,
max.words = 200,
random.order = F,
rot.per = .1,
scale = c(3, 1),
colors = pal)
# wordcloud2
devtools::install_github("lchiffon/wordcloud2")
library(wordcloud2)
wordcloud2(top_100, size = 1,shape = 'pentagon')
wordcloud2(top_100, size = 2, minRotation = -pi/2, maxRotation = -pi/2)
wordcloud2(top_100, size = 2, minRotation = -pi/2, maxRotation = -pi/2)
setwd("C:/Users/user/git/finpjt/sevenget")
read.table("date.txt")
read.table("date.txt", sep="")
read.table("date.txt", sep=" ", header=F)
read.table("date.txt", sep=" ", header=F,col.names = "date",fill=F)
read.table("date.txt")
read.table("date.txt", sep="\t", header=F,col.names = "date")
read.table("date.txt")
read.table("date.txt")
read.csv("date.csv")
read.csv("date.csv", header=F,col.names = c("no","date"))
dateD <- read.csv("date.csv", header=F,col.names = c("no","date"))
dateD
dateD <- dateD[,2]
dateD
table(dateD)
plot(dateD)
library(ggplot2)
qplot(dateD)
qplot(dateD) +geom_bar()
qplot(dateD) +geom_col()
ggplot(dateD) +geom_col()
qplot(dateD) +geom_col()
qplot(dateD)
qplot(mpg, wt, data = mtcars)
qplot(mpg, wt, data = mtcars, colour = cyl)
qplot(mpg, wt, data = mtcars, size = cyl)
qplot(mpg, wt, data = mtcars, facets = vs ~ am)
qplot(1:10, rnorm(10), colour = runif(10))
qplot(1:10, letters[1:10])
mod <- lm(mpg ~ wt, data = mtcars)
qplot(resid(mod), fitted(mod))
qplot(dateD, aes(y="date"))
table(dateD)
dateD <- read.csv("date.csv", header=F,col.names = c("no","date"))
dateD <- dateD[,2]
dateD
table(dateD)
dateD <- read.csv("date.csv", header=F,col.names = c("no","date"))
dateD <- dateD[,2]
dateD
table(dateD)
library(ggplot2)
qplot(dateD)
ggplot(dateD, aes(x=date))+geom_bar(fill="#654ea3")
ggplot(dateD)+geom_bar(fill="#654ea3")
dateD <- as.data.frame(dateD)
table(dateD)
library(ggplot2)
ggplot(dateD)+geom_bar(fill="#654ea3")
ggplot(dateD)
dateD <- read.csv("date.csv", header=F,col.names = c("no","date"))
dateD <- dateD[,2]
class(dateD)
table(dateD)
library(ggplot2)
qplot(dateD)+coord_flip()
ggplot(df, aes(x=team), col="dark blue")+geom_bar(fill="dark blue")
ggplot(df, aes(x=team), color="dark blue")+geom_bar(fill="dark blue")
qplot(dateD, color="dark blue")+coord_flip()
qplot(dateD, color="#654ea3")+coord_flip()
qplot(dateD, color="#654ea3")+coord_flip()+
scale_fill_manual(values=c("#FF6666"))
qplot(dateD)+coord_flip()+
scale_fill_manual(values=c("#FF6666"))
qplot(dateD)+coord_flip()+
scale_fill_manual(values=c("#654ea3"))
qplot(dateD)+coord_flip()+geom_bar(fill="#654ea3")
table(dateD)
marriageD <- read.csv("marriage.csv",header=F,col.names = c("no","marriage"))
marriageD <- marriageD[,2]
class(marriageD)
table(marriageD)
marriageD <- read.csv("marriage.csv",header=F,col.names = c("no","marriage"))
marriageD <- marriageD[,2]
table(marriageD)
class(marriageD)
qplot(marriageD)+coord_flip()+geom_bar(fill="#654ea3")
babyD <- read.csv("baby.csv",header=F,col.names = c("no","baby"))
babyD <- babyD[,2]
class(babyD)
table(babyD)
qplot(babyD)+coord_flip()+geom_bar(fill="#654ea3")
babyD <- read.csv("baby.csv",header=F,col.names = c("no","baby"))
babyD <- babyD[,2]
class(babyD)
table(babyD)
qplot(babyD)+coord_flip()+geom_bar(fill="#654ea3")
babyD <- read.csv("baby.csv",header=F,col.names = c("no","baby"))
babyD <- babyD[,2]
class(babyD)
table(babyD)
qplot(babyD)+coord_flip()+geom_bar(fill="#654ea3")
#===================================================================================
houseD <- read.csv("house.csv",header=F,col.names = c("no","house"))
houseD <- houseD[,2]
class(houseD)
table(houseD)
qplot(houseD)+coord_flip()+geom_bar(fill="#654ea3")
#===================================================================================
relationshipD <- read.csv("relationship.csv",header=F,col.names = c("no","relationship"))
relationshipD <- relationshipD[,2]
class(relationshipD)
table(relationshipD)
qplot(relationshipD)+coord_flip()+geom_bar(fill="#654ea3")
#===================================================================================
relationshipD <- read.csv("relationship.csv",header=F,col.names = c("no","relationship"))
relationshipD <- relationshipD[,2]
class(relationshipD)
table(relationshipD)
qplot(relationshipD)+coord_flip()+geom_bar(fill="#654ea3")
#===================================================================================
relationshipD <- read.csv("relationship.csv",header=F,col.names = c("no","relationship"))
relationshipD <- relationshipD[,2]
class(relationshipD)
table(relationshipD)
qplot(relationshipD)+coord_flip()+geom_bar(fill="#654ea3")
#===================================================================================
relationshipD <- read.csv("relationship.csv",header=F,col.names = c("no","relationship"))
class(relationshipD)
relationshipD <- relationshipD[,2]
table(relationshipD)
qplot(relationshipD)+coord_flip()+geom_bar(fill="#654ea3")
qplot(dateD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(y='연애')
qplot(dateD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애')
qplot(marriageD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='결혼')
qplot(babyD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='출산 및 육아')
qplot(houseD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='내집마련')
qplot(relationshipD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='인간관계')
#===================================================================================
dreamD <- read.csv("dream.csv",header=F,col.names = c("no","dream"))
dreamD <- dreamD[,2]
class(dreamD)
table(dreamD)
qplot(dreamD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='인간관계')
qplot(dreamD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='꿈')
#===================================================================================
hoprD <- read.csv("hope.csv",header=F,col.names = c("no","hope"))
hoprD <- hoprD[,2]
class(hoprD)
table(hoprD)
qplot(hoprD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='꿈')
#===================================================================================
hopeD <- read.csv("hope.csv",header=F,col.names = c("no","hope"))
hopeD <- hopeD[,2]
class(hopeD)
table(hopeD)
qplot(hopeD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='꿈')
par(mfrow = c(2, 4))
qplot(dateD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애')
qplot(marriageD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='결혼')
qplot(babyD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='출산 및 육아')
par(no.readonly = TRUE)
par(mfrow = c(2, 4))
qplot(dateD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애')
par(mfrow = c(2, 4))
layout(mat = matrix(c(1,1,2,3),2,byrow = T))
qplot(dateD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애')
split.screen(figs = c(2,3))
qplot(dateD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애')
split.screen(figs = c(2,3))
plot(iris)
plot(iris)
#===================================================================================
dateD <- read.csv("date.csv", header=F,col.names = c("no","date"))
split.screen(c(2,3))
plot(iris)
attach(mtcars)
#현재 상태를 opar에 저장한다
opar <- par(no.readonly = TRUE)
# 화면을 2*2로 나눈다
par(mfrow = c(2, 2))
plot(wt, mpg, main = "Scatterplot of wt vs. mpg")
plot(wt, disp, main = "Scatterplot of wt vs disp")
hist(wt, main = "Histogram of wt")
boxplot(wt, main = "Boxplot of wt")
par(opar)
detach(mtcars)
#현재 상태를 opar에 저장한다
opar <- par(no.readonly = TRUE)
# 화면을 2*2로 나눈다
par(mfrow = c(2, 2))
#===================================================================================
dateD <- read.csv("date.csv", header=F,col.names = c("no","date"))
dateD <- dateD[,2]
class(dateD)
table(dateD)
qplot(dateD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애')
t3_w <-c( "mlb" , "nfl" , "football" , "sports" , "young" , "usc" , "bears" , "dolphins" , "trojans" , "baseball" , "nba" , "week" , "game" , "wins" , "hernandez")
t3_v <-c( 0.054138 , 0.051153 , 0.013715 , 0.012403 , 0.012300 , 0.011836 , 0.011039 , 0.010833 , 0.010241 , 0.009160 , 0.008697 , 0.007256 , 0.007076 , 0.006536 , 0.006253)
t12_w <-c( "fox" , "oprah" , "news" , "glee" , "show" , "tv" , "favorite" , "things" , "fringe" , "audience" , "cruise" , "watching" , "watch" , "temporada" , "love")
t12_v <-c( 0.073025 , 0.069464 , 0.028156 , 0.010066 , 0.008214 , 0.007858 , 0.006742 , 0.006695 , 0.005840 , 0.005555 , 0.004796 , 0.004297 , 0.004155 , 0.004084 , 0.004036)
t14_w <-c( "apple" , "iphone" , "blackberry" , "ipad" , "ipod" , "android" , "ios" , "app" , "brb" , "google" , "mac" , "black" , "touch" , "generation" , "htc")
t14_v <-c( 0.101272 , 0.033439 , 0.033285 , 0.031374 , 0.017475 , 0.014870 , 0.013268 , 0.013098 , 0.012929 , 0.012852 , 0.010802 , 0.010787 , 0.010448 , 0.007844 , 0.007597)
plot3<-qplot(t14_w, t14_v, geom="bar", fill=factor(t14_w), xlab="efficient words of topic 14", ylab="Density") + opts(axis.title.y = theme_text(size=10, hjust=0.3, vjust=0.5,angle=90)) +opts(axis.text.y = theme_text(size=10, hjust=1)) + opts(axis.title.x = theme_text(size=12, vjust=-0.5)) + opts(axis.text.x =theme_text(size=10 , angle=45, hjust=1, vjust=1)) + opts(legend.position = "none")
plot2<-qplot(t12_w, t12_v, geom="bar", fill=factor(t12_w), xlab="efficient words of topic 12", ylab="Density") + opts(axis.title.y = theme_text(size=10, hjust=0.3, vjust=0.5,angle=90)) +opts(axis.text.y = theme_text(size=10, hjust=1)) + opts(axis.title.x = theme_text(size=12, vjust=-0.5)) + opts(axis.text.x =theme_text(size=10 , angle=45, hjust=1, vjust=1)) + opts(legend.position = "none")
plot1<-qplot(t3_w, t3_v, geom="bar", fill=factor(t3_w), xlab="efficient words of topic 3", ylab="Density") + opts(axis.title.y = theme_text(size=10, hjust=0.3, vjust=0.5,angle=90)) +opts(axis.text.y = theme_text(size=10, hjust=1)) + opts(axis.title.x = theme_text(size=12, vjust=-0.5)) + opts(axis.text.x =theme_text(size=10 , angle=45, hjust=1, vjust=1)) + opts(legend.position = "none")
library(gridExtra)
grid.arrange(plot1,plot2,plot3,nrow=1)
setwd("C:/Users/user/git/finpjt/sevenget")
library(ggplot2)
#현재 상태를 opar에 저장한다
opar <- par(no.readonly = TRUE)
# 화면을 2*2로 나눈다
par(mfrow = c(2, 2))
#===================================================================================
dateD <- read.csv("date.csv", header=F,col.names = c("no","date"))
dateD <- dateD[,2]
class(dateD)
table(dateD)
plot1 <- qplot(dateD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애')
#===================================================================================
marriageD <- read.csv("marriage.csv",header=F,col.names = c("no","marriage"))
marriageD <- marriageD[,2]
class(marriageD)
table(marriageD)
plot2 <- qplot(marriageD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='결혼')
#===================================================================================
babyD <- read.csv("baby.csv",header=F,col.names = c("no","baby"))
babyD <- babyD[,2]
class(babyD)
table(babyD)
plot3 <- qplot(babyD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='출산 및 육아')
#===================================================================================
houseD <- read.csv("house.csv",header=F,col.names = c("no","house"))
houseD <- houseD[,2]
class(houseD)
table(houseD)
plot4 <- qplot(houseD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='내집마련')
#===================================================================================
relationshipD <- read.csv("relationship.csv",header=F,col.names = c("no","relationship"))
relationshipD <- relationshipD[,2]
class(relationshipD)
table(relationshipD)
plot5 <- qplot(relationshipD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='인간관계')
#===================================================================================
dreamD <- read.csv("dream.csv",header=F,col.names = c("no","dream"))
dreamD <- dreamD[,2]
class(dreamD)
table(dreamD)
plot6 <- qplot(dreamD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='꿈')
#===================================================================================
hopeD <- read.csv("hope.csv",header=F,col.names = c("no","hope"))
hopeD <- hopeD[,2]
class(hopeD)
table(hopeD)
plot7 <- qplot(hopeD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='꿈')
library(gridExtra)
grid.arrange(plot1,plot2,plot3,nrow=1)
grid.arrange(plot1,plot2,plot3,plot4,plot5,plot6,plot7,nrow=1)
grid.arrange(plot1,plot2,plot3,plot4,plot5,plot6,plot7,nrow=3)
plot1 <- qplot(dateD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애') + geom_text()
plot1 <- qplot(dateD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애') + geom_text()
plot1
plot1 <- qplot(dateD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애') + geom_text()
qplot(dateD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애')
dateD$freq <- table(dateD)
table(dateD)
#===================================================================================
dateD <- read.csv("date.csv", header=F,col.names = c("no","date"))
dateD <- dateD[,2]
class(dateD)
table(dateD)
dateD$freq <- table(dateD)
table(dateD)
#===================================================================================
dateD <- read.csv("date.csv", header=F,col.names = c("no","date"))
dateD <- dateD[,2]
class(dateD)
table(dateD)
dateD$freq <- table(dateD)/length(dateD)
#===================================================================================
dateD <- read.csv("date.csv", header=F,col.names = c("no","date"))
dateD <- dateD[,2]
class(dateD)
table(dateD)
freq <- table(dateD)
freq
qplot(dateD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애') + geom_text(stat = freq)
plot1 <- qplot(freq)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애') + geom_text(stat = freq)
cbind(dateD,freq)
dateD
table(dateD)
#===================================================================================
dateD <- read.csv("date.csv", header=F,col.names = c("no","date"))
dateD <- dateD[,2]
class(dateD)
table(dateD)
class(table(dateD))
dateFreq<-as.data.frame((table(dateD)
)
dateFreq
dateFreq<-as.data.frame(table(dateD)
)
dateFreq
plot1 <- qplot(dateFreq)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애') + geom_text(stat = dateFreq)
plot1 <- qplot(dateFreq)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애') + geom_text(aes(dateFreq$Freq))
plot1
qplot(dateFreq)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애') + geom_text(aes(dateFreq$Freq))
qplot(dateFreq)
qplot(dateD)
qplot(dateD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애')
qplot(dateD)+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애') + geom_text(aes(dateFreq$Freq))
plot1 <- qplot(dateFreq,aes(x=Freq,y=date))+coord_flip()+geom_bar(fill="#654ea3")+ labs(x='연애') + geom_text(aes(dateFreq$Freq))
plot1
qplot(dateFreq,aes(x=Freq,y=date))
dateFreq
# make some data
months <-rep(c("jan", "feb", "mar", "apr", "may", "jun",
"jul", "aug", "sep", "oct", "nov", "dec"), 2)
chickens <-c(1, 2, 3, 3, 3, 4, 5, 4, 3, 4, 2, 2)
eggs <-c(0, 8, 10, 13, 16, 20, 25, 20, 18, 16, 10, 8)
values <-c(chickens, eggs)
type <-c(rep("chickens", 12), rep("eggs", 12))
mydata <-data.frame(months, values)
library(ggplot2)
p <-ggplot(mydata, aes(months, values))
p +geom_bar()
p <-ggplot(mydata, aes(months, values))
p +geom_bar(stat = "identity")
p <-ggplot(mydata, aes(months, values))
p +geom_bar(stat = "identity", aes(fill = type))
mydata$months
# make some data
months <-rep(c("jan", "feb", "mar", "apr", "may", "jun",
"jul", "aug", "sep", "oct", "nov", "dec"), 2)
chickens <-c(1, 2, 3, 3, 3, 4, 5, 4, 3, 4, 2, 2)
eggs <-c(0, 8, 10, 13, 16, 20, 25, 20, 18, 16, 10, 8)
values <-c(chickens, eggs)
type <-c(rep("chickens", 12), rep("eggs", 12))
mydata <-data.frame(months, values)
library(ggplot2)
p <-ggplot(mydata, aes(months, values))
p +geom_bar()
p <-ggplot(mydata, aes(months, values))
p +geom_bar(stat = "identity")
barplot1
mydata$months
#[1] jan feb mar apr may jun jul aug sep oct nov dec jan feb mar apr may
#[18] jun jul aug sep oct nov dec
#Levels: apr aug dec feb jan jul jun mar may nov oct sep
mydata$months <-factor(mydata$months,
levels = c("jan", "feb", "mar", "apr", "may", "jun",
"jul", "aug", "sep", "oct", "nov", "dec"))
mydata$months
#[1] jan feb mar apr may jun jul aug sep oct nov dec jan feb mar apr may
#[18] jun jul aug sep oct nov dec
#Levels: jan feb mar apr may jun jul aug sep oct nov dec
p <-ggplot(mydata, aes(months, values))
p +geom_bar(stat = "identity", aes(fill = type))
p <-ggplot(mydata, aes(months, values))
p +geom_bar()
